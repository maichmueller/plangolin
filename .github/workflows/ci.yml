name: pytest

on: [push, pull_request]

jobs:
  precommit:
    name: Pre-commit checks
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Upgrade pip, setuptools, wheel
        run: |
          python -m ensurepip --upgrade
          python -m pip install --upgrade pip setuptools wheel

      - name: Show versions
        run: |
          python --version
          pip --version

      - name: Install system git
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends git

      - name: Install formatting tools
        run: pip install isort black pre-commit

      - name: Update hooks
        run: pre-commit autoupdate -j 4

      - name: Run pre-commit on all files
        run: pre-commit run --all-files

  pytest:
    name: Test suite
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12.7']
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip, setuptools, wheel
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Show versions
        run: |
          python --version
          pip --version

      - name: Install dev dependencies
        run: pip install '.[dev]'

      - name: Export PYTEST_TMPDIR
        run: echo "PYTEST_TMPDIR=$RUNNER_TEMP/${{ matrix.os }}-${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Ensure TMPDIR exists
        run: mkdir -p "$PYTEST_TMPDIR"

      - name: Run pytest
        run: python -m pytest --basetemp="$PYTEST_TMPDIR/pytest" --cov --cov-branch --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: maichmueller/plangolin
